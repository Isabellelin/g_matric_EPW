                                                                                      
                                       ``:oss/                                        
                           `.+s+.     .+ys--yh+     `./ss+.                           
                          -sh//yy+`   +yy   +yy    -+h+-oyy                           
                          -yh- .oyy/.-sh.   .syo-.:sy-  /yh                           
                 `.-.`    `yh+   -oyyyo.     `/syys:    oys      `.`                  
               `/+ssys+-` `sh+      `                   oys`   .:osyo`                
               -yh- ./syyooyo`                          .sys+/oyo--yh/                
               `yy+    .-:-.                             `-/+/:`  -sh-                
                /yh.                                              oys                 
          ``..---hho---------`   .---------..`      `.-----.`    -hd+---.             
       `./osmNMMMMMMMMMMMMMMMs. +NNMMMMMMMMNNmh+.   yNMMMMMNm-  oNMMMMMNmo++:`        
       +sy--/sdMMMhyyyyyyyNMMh- .oyNMMmyyyyyhNMMm+` -yMMMdyyo:` .oyyNMMNhs+syy`       
       -yy/   /MMM+.`-+/``mMMy-   `mMMh:`````.dMMN:` `MMMy-`-dhhy```mMMy:``+hs        
        -yy+` /MMMo:-mMM+`-oo/.    mMMh:     `dMMN/`  dMMm:`dMMMMy..MMMo-.+yo`        
         .sys`/MMMMNNMMMs-         mMMmyooooymMMNo:   oMMM/sMMMMMM++MMN//oh:          
          `sh+/MMMhyyMMMs- `-`     mMMMMMMMMMNmy+-`   -MMMhMMMsmMMmdMMd/yy+           
    `-/+++oyy-/MMM+.`/hh/.`mNm:`   mMMd+/////:-.`      NMMMMMd/:NMMMMMy:/yyo/:.`      
   +os+//:-..-oMMMo:--:::-/MMMo. .-mMMd+---`           hMMMMN+. oMMMMMo. `-+osyso:`   
   syo     `mNMMMMMNNNNNNNNMMMo.oNNMMMMMNNNN:`         +MMMMs:`  dMMMN/`     ``:syo   
   /yh`     :syyyyyyyyyyyyyyyy+.`+syyyyyyyyo:`         .oyys:`   .oyys:`        +yh   
   -yh-        ````````````````    `````````              ``        ``          oys   
   -+h/------------------------::::::::://////++++++++++++++++++++++///////::::/yd:   
   shdddddddddddddddddddddddddddddhhhhhhhhyyyyyssssssssssssssssyyyyyyyhhhhhhhddddh`   
                                                                                      
  S. Ponce, E. R. Margine, C. Verdi, and F. Giustino,                                 
                                                Comput. Phys. Commun. 209, 116 (2016) 
                                                                                      

     Program EPW v.5.3.1 starts on 11Jan2021 at 23: 1:33 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
         "P. Giannozzi et al., J. Phys.:Condens. Matter 29 465901 (2017);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on    72 processors

     MPI processes distributed on     3 nodes
     K-points division:     npool     =      72
     Reading input from epw1.in

     Reading supplied temperature list.

     Reading xml data from directory:

     ./si.save/
     Message from routine read_pp_mesh:
     mesh size missing, using the one in header

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation= PBE
                           (   1   4   3   4   0   0   0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         511     511    169                 7631     7631    1471
 
     Reading collected, re-writing distributed wavefunctions

     --                                                                         

     bravais-lattice index     =            2
     lattice parameter (a_0)   =      10.2620  a.u.
     unit-cell volume          =     270.1693 (a.u.)^3
     number of atoms/cell      =            2
     number of atomic types    =            1
     kinetic-energy cut-off    =      35.0000  Ry
     charge density cut-off    =     140.0000  Ry
     Exchange-correlation= PBE
                           (   1   4   3   4   0   0   0)
     Non magnetic calculation with spin-orbit

     celldm(1)=   10.26200  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of a_0)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/a_0)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

   Cartesian axes

     site n.  atom      mass           positions (a_0 units)
        1        Si  28.0855   tau( 1) = (    0.00000    0.00000    0.00000  )
        2        Si  28.0855   tau( 2) = (    0.25000    0.25000    0.25000  )
 
     49 Sym.Ops. (with q -> -q+G )


     G cutoff =  373.4499  (   7631 G-vectors)     FFT grid: ( 32, 32, 32)
     number of k points=  216
                       cart. coord. in units 2pi/a_0
        k(    1) = (   0.0000000   0.0000000   0.0000000), wk =   0.0046296
        k(    2) = (  -0.1666667   0.1666667  -0.1666667), wk =   0.0046296
        k(    3) = (  -0.3333333   0.3333333  -0.3333333), wk =   0.0046296
        k(    4) = (  -0.5000000   0.5000000  -0.5000000), wk =   0.0046296
        k(    5) = (  -0.6666667   0.6666667  -0.6666667), wk =   0.0046296
        k(    6) = (  -0.8333333   0.8333333  -0.8333333), wk =   0.0046296
        k(    7) = (   0.1666667   0.1666667   0.1666667), wk =   0.0046296
        k(    8) = (   0.0000000   0.3333333   0.0000000), wk =   0.0046296
        k(    9) = (  -0.1666667   0.5000000  -0.1666667), wk =   0.0046296
        k(   10) = (  -0.3333333   0.6666667  -0.3333333), wk =   0.0046296
        k(   11) = (  -0.5000000   0.8333333  -0.5000000), wk =   0.0046296
        k(   12) = (  -0.6666667   1.0000000  -0.6666667), wk =   0.0046296
        k(   13) = (   0.3333333   0.3333333   0.3333333), wk =   0.0046296
        k(   14) = (   0.1666667   0.5000000   0.1666667), wk =   0.0046296
        k(   15) = (   0.0000000   0.6666667   0.0000000), wk =   0.0046296
        k(   16) = (  -0.1666667   0.8333333  -0.1666667), wk =   0.0046296
        k(   17) = (  -0.3333333   1.0000000  -0.3333333), wk =   0.0046296
        k(   18) = (  -0.5000000   1.1666667  -0.5000000), wk =   0.0046296
        k(   19) = (   0.5000000   0.5000000   0.5000000), wk =   0.0046296
        k(   20) = (   0.3333333   0.6666667   0.3333333), wk =   0.0046296
        k(   21) = (   0.1666667   0.8333333   0.1666667), wk =   0.0046296
        k(   22) = (   0.0000000   1.0000000   0.0000000), wk =   0.0046296
        k(   23) = (  -0.1666667   1.1666667  -0.1666667), wk =   0.0046296
        k(   24) = (  -0.3333333   1.3333333  -0.3333333), wk =   0.0046296
        k(   25) = (   0.6666667   0.6666667   0.6666667), wk =   0.0046296
        k(   26) = (   0.5000000   0.8333333   0.5000000), wk =   0.0046296
        k(   27) = (   0.3333333   1.0000000   0.3333333), wk =   0.0046296
        k(   28) = (   0.1666667   1.1666667   0.1666667), wk =   0.0046296
        k(   29) = (   0.0000000   1.3333333   0.0000000), wk =   0.0046296
        k(   30) = (  -0.1666667   1.5000000  -0.1666667), wk =   0.0046296
        k(   31) = (   0.8333333   0.8333333   0.8333333), wk =   0.0046296
        k(   32) = (   0.6666667   1.0000000   0.6666667), wk =   0.0046296
        k(   33) = (   0.5000000   1.1666667   0.5000000), wk =   0.0046296
        k(   34) = (   0.3333333   1.3333333   0.3333333), wk =   0.0046296
        k(   35) = (   0.1666667   1.5000000   0.1666667), wk =   0.0046296
        k(   36) = (   0.0000000   1.6666667   0.0000000), wk =   0.0046296
        k(   37) = (  -0.1666667  -0.1666667   0.1666667), wk =   0.0046296
        k(   38) = (  -0.3333333   0.0000000   0.0000000), wk =   0.0046296
        k(   39) = (  -0.5000000   0.1666667  -0.1666667), wk =   0.0046296
        k(   40) = (  -0.6666667   0.3333333  -0.3333333), wk =   0.0046296
        k(   41) = (  -0.8333333   0.5000000  -0.5000000), wk =   0.0046296
        k(   42) = (  -1.0000000   0.6666667  -0.6666667), wk =   0.0046296
        k(   43) = (   0.0000000   0.0000000   0.3333333), wk =   0.0046296
        k(   44) = (  -0.1666667   0.1666667   0.1666667), wk =   0.0046296
        k(   45) = (  -0.3333333   0.3333333   0.0000000), wk =   0.0046296
        k(   46) = (  -0.5000000   0.5000000  -0.1666667), wk =   0.0046296
        k(   47) = (  -0.6666667   0.6666667  -0.3333333), wk =   0.0046296
        k(   48) = (  -0.8333333   0.8333333  -0.5000000), wk =   0.0046296
        k(   49) = (   0.1666667   0.1666667   0.5000000), wk =   0.0046296
        k(   50) = (  -0.0000000   0.3333333   0.3333333), wk =   0.0046296
        k(   51) = (  -0.1666667   0.5000000   0.1666667), wk =   0.0046296
        k(   52) = (  -0.3333333   0.6666667   0.0000000), wk =   0.0046296
        k(   53) = (  -0.5000000   0.8333333  -0.1666667), wk =   0.0046296
        k(   54) = (  -0.6666667   1.0000000  -0.3333333), wk =   0.0046296
        k(   55) = (   0.3333333   0.3333333   0.6666667), wk =   0.0046296
        k(   56) = (   0.1666667   0.5000000   0.5000000), wk =   0.0046296
        k(   57) = (   0.0000000   0.6666667   0.3333333), wk =   0.0046296
        k(   58) = (  -0.1666667   0.8333333   0.1666667), wk =   0.0046296
        k(   59) = (  -0.3333333   1.0000000   0.0000000), wk =   0.0046296
        k(   60) = (  -0.5000000   1.1666667  -0.1666667), wk =   0.0046296
        k(   61) = (   0.5000000   0.5000000   0.8333333), wk =   0.0046296
        k(   62) = (   0.3333333   0.6666667   0.6666667), wk =   0.0046296
        k(   63) = (   0.1666667   0.8333333   0.5000000), wk =   0.0046296
        k(   64) = (   0.0000000   1.0000000   0.3333333), wk =   0.0046296
        k(   65) = (  -0.1666667   1.1666667   0.1666667), wk =   0.0046296
        k(   66) = (  -0.3333333   1.3333333   0.0000000), wk =   0.0046296
        k(   67) = (   0.6666667   0.6666667   1.0000000), wk =   0.0046296
        k(   68) = (   0.5000000   0.8333333   0.8333333), wk =   0.0046296
        k(   69) = (   0.3333333   1.0000000   0.6666667), wk =   0.0046296
        k(   70) = (   0.1666667   1.1666667   0.5000000), wk =   0.0046296
        k(   71) = (  -0.0000000   1.3333333   0.3333333), wk =   0.0046296
        k(   72) = (  -0.1666667   1.5000000   0.1666667), wk =   0.0046296
        k(   73) = (  -0.3333333  -0.3333333   0.3333333), wk =   0.0046296
        k(   74) = (  -0.5000000  -0.1666667   0.1666667), wk =   0.0046296
        k(   75) = (  -0.6666667   0.0000000   0.0000000), wk =   0.0046296
        k(   76) = (  -0.8333333   0.1666667  -0.1666667), wk =   0.0046296
        k(   77) = (  -1.0000000   0.3333333  -0.3333333), wk =   0.0046296
        k(   78) = (  -1.1666667   0.5000000  -0.5000000), wk =   0.0046296
        k(   79) = (  -0.1666667  -0.1666667   0.5000000), wk =   0.0046296
        k(   80) = (  -0.3333333   0.0000000   0.3333333), wk =   0.0046296
        k(   81) = (  -0.5000000   0.1666667   0.1666667), wk =   0.0046296
        k(   82) = (  -0.6666667   0.3333333   0.0000000), wk =   0.0046296
        k(   83) = (  -0.8333333   0.5000000  -0.1666667), wk =   0.0046296
        k(   84) = (  -1.0000000   0.6666667  -0.3333333), wk =   0.0046296
        k(   85) = (   0.0000000   0.0000000   0.6666667), wk =   0.0046296
        k(   86) = (  -0.1666667   0.1666667   0.5000000), wk =   0.0046296
        k(   87) = (  -0.3333333   0.3333333   0.3333333), wk =   0.0046296
        k(   88) = (  -0.5000000   0.5000000   0.1666667), wk =   0.0046296
        k(   89) = (  -0.6666667   0.6666667  -0.0000000), wk =   0.0046296
        k(   90) = (  -0.8333333   0.8333333  -0.1666667), wk =   0.0046296
        k(   91) = (   0.1666667   0.1666667   0.8333333), wk =   0.0046296
        k(   92) = (   0.0000000   0.3333333   0.6666667), wk =   0.0046296
        k(   93) = (  -0.1666667   0.5000000   0.5000000), wk =   0.0046296
        k(   94) = (  -0.3333333   0.6666667   0.3333333), wk =   0.0046296
        k(   95) = (  -0.5000000   0.8333333   0.1666667), wk =   0.0046296
        k(   96) = (  -0.6666667   1.0000000   0.0000000), wk =   0.0046296
        k(   97) = (   0.3333333   0.3333333   1.0000000), wk =   0.0046296
        k(   98) = (   0.1666667   0.5000000   0.8333333), wk =   0.0046296
        k(   99) = (   0.0000000   0.6666667   0.6666667), wk =   0.0046296
        k(  100) = (  -0.1666667   0.8333333   0.5000000), wk =   0.0046296
        k(  101) = (  -0.3333333   1.0000000   0.3333333), wk =   0.0046296
        k(  102) = (  -0.5000000   1.1666667   0.1666667), wk =   0.0046296
        k(  103) = (   0.5000000   0.5000000   1.1666667), wk =   0.0046296
        k(  104) = (   0.3333333   0.6666667   1.0000000), wk =   0.0046296
        k(  105) = (   0.1666667   0.8333333   0.8333333), wk =   0.0046296
        k(  106) = (   0.0000000   1.0000000   0.6666667), wk =   0.0046296
        k(  107) = (  -0.1666667   1.1666667   0.5000000), wk =   0.0046296
        k(  108) = (  -0.3333333   1.3333333   0.3333333), wk =   0.0046296
        k(  109) = (  -0.5000000  -0.5000000   0.5000000), wk =   0.0046296
        k(  110) = (  -0.6666667  -0.3333333   0.3333333), wk =   0.0046296
        k(  111) = (  -0.8333333  -0.1666667   0.1666667), wk =   0.0046296
        k(  112) = (  -1.0000000   0.0000000   0.0000000), wk =   0.0046296
        k(  113) = (  -1.1666667   0.1666667  -0.1666667), wk =   0.0046296
        k(  114) = (  -1.3333333   0.3333333  -0.3333333), wk =   0.0046296
        k(  115) = (  -0.3333333  -0.3333333   0.6666667), wk =   0.0046296
        k(  116) = (  -0.5000000  -0.1666667   0.5000000), wk =   0.0046296
        k(  117) = (  -0.6666667   0.0000000   0.3333333), wk =   0.0046296
        k(  118) = (  -0.8333333   0.1666667   0.1666667), wk =   0.0046296
        k(  119) = (  -1.0000000   0.3333333   0.0000000), wk =   0.0046296
        k(  120) = (  -1.1666667   0.5000000  -0.1666667), wk =   0.0046296
        k(  121) = (  -0.1666667  -0.1666667   0.8333333), wk =   0.0046296
        k(  122) = (  -0.3333333  -0.0000000   0.6666667), wk =   0.0046296
        k(  123) = (  -0.5000000   0.1666667   0.5000000), wk =   0.0046296
        k(  124) = (  -0.6666667   0.3333333   0.3333333), wk =   0.0046296
        k(  125) = (  -0.8333333   0.5000000   0.1666667), wk =   0.0046296
        k(  126) = (  -1.0000000   0.6666667   0.0000000), wk =   0.0046296
        k(  127) = (   0.0000000   0.0000000   1.0000000), wk =   0.0046296
        k(  128) = (  -0.1666667   0.1666667   0.8333333), wk =   0.0046296
        k(  129) = (  -0.3333333   0.3333333   0.6666667), wk =   0.0046296
        k(  130) = (  -0.5000000   0.5000000   0.5000000), wk =   0.0046296
        k(  131) = (  -0.6666667   0.6666667   0.3333333), wk =   0.0046296
        k(  132) = (  -0.8333333   0.8333333   0.1666667), wk =   0.0046296
        k(  133) = (   0.1666667   0.1666667   1.1666667), wk =   0.0046296
        k(  134) = (   0.0000000   0.3333333   1.0000000), wk =   0.0046296
        k(  135) = (  -0.1666667   0.5000000   0.8333333), wk =   0.0046296
        k(  136) = (  -0.3333333   0.6666667   0.6666667), wk =   0.0046296
        k(  137) = (  -0.5000000   0.8333333   0.5000000), wk =   0.0046296
        k(  138) = (  -0.6666667   1.0000000   0.3333333), wk =   0.0046296
        k(  139) = (   0.3333333   0.3333333   1.3333333), wk =   0.0046296
        k(  140) = (   0.1666667   0.5000000   1.1666667), wk =   0.0046296
        k(  141) = (   0.0000000   0.6666667   1.0000000), wk =   0.0046296
        k(  142) = (  -0.1666667   0.8333333   0.8333333), wk =   0.0046296
        k(  143) = (  -0.3333333   1.0000000   0.6666667), wk =   0.0046296
        k(  144) = (  -0.5000000   1.1666667   0.5000000), wk =   0.0046296
        k(  145) = (  -0.6666667  -0.6666667   0.6666667), wk =   0.0046296
        k(  146) = (  -0.8333333  -0.5000000   0.5000000), wk =   0.0046296
        k(  147) = (  -1.0000000  -0.3333333   0.3333333), wk =   0.0046296
        k(  148) = (  -1.1666667  -0.1666667   0.1666667), wk =   0.0046296
        k(  149) = (  -1.3333333   0.0000000   0.0000000), wk =   0.0046296
        k(  150) = (  -1.5000000   0.1666667  -0.1666667), wk =   0.0046296
        k(  151) = (  -0.5000000  -0.5000000   0.8333333), wk =   0.0046296
        k(  152) = (  -0.6666667  -0.3333333   0.6666667), wk =   0.0046296
        k(  153) = (  -0.8333333  -0.1666667   0.5000000), wk =   0.0046296
        k(  154) = (  -1.0000000   0.0000000   0.3333333), wk =   0.0046296
        k(  155) = (  -1.1666667   0.1666667   0.1666667), wk =   0.0046296
        k(  156) = (  -1.3333333   0.3333333   0.0000000), wk =   0.0046296
        k(  157) = (  -0.3333333  -0.3333333   1.0000000), wk =   0.0046296
        k(  158) = (  -0.5000000  -0.1666667   0.8333333), wk =   0.0046296
        k(  159) = (  -0.6666667  -0.0000000   0.6666667), wk =   0.0046296
        k(  160) = (  -0.8333333   0.1666667   0.5000000), wk =   0.0046296
        k(  161) = (  -1.0000000   0.3333333   0.3333333), wk =   0.0046296
        k(  162) = (  -1.1666667   0.5000000   0.1666667), wk =   0.0046296
        k(  163) = (  -0.1666667  -0.1666667   1.1666667), wk =   0.0046296
        k(  164) = (  -0.3333333  -0.0000000   1.0000000), wk =   0.0046296
        k(  165) = (  -0.5000000   0.1666667   0.8333333), wk =   0.0046296
        k(  166) = (  -0.6666667   0.3333333   0.6666667), wk =   0.0046296
        k(  167) = (  -0.8333333   0.5000000   0.5000000), wk =   0.0046296
        k(  168) = (  -1.0000000   0.6666667   0.3333333), wk =   0.0046296
        k(  169) = (   0.0000000   0.0000000   1.3333333), wk =   0.0046296
        k(  170) = (  -0.1666667   0.1666667   1.1666667), wk =   0.0046296
        k(  171) = (  -0.3333333   0.3333333   1.0000000), wk =   0.0046296
        k(  172) = (  -0.5000000   0.5000000   0.8333333), wk =   0.0046296
        k(  173) = (  -0.6666667   0.6666667   0.6666667), wk =   0.0046296
        k(  174) = (  -0.8333333   0.8333333   0.5000000), wk =   0.0046296
        k(  175) = (   0.1666667   0.1666667   1.5000000), wk =   0.0046296
        k(  176) = (  -0.0000000   0.3333333   1.3333333), wk =   0.0046296
        k(  177) = (  -0.1666667   0.5000000   1.1666667), wk =   0.0046296
        k(  178) = (  -0.3333333   0.6666667   1.0000000), wk =   0.0046296
        k(  179) = (  -0.5000000   0.8333333   0.8333333), wk =   0.0046296
        k(  180) = (  -0.6666667   1.0000000   0.6666667), wk =   0.0046296
        k(  181) = (  -0.8333333  -0.8333333   0.8333333), wk =   0.0046296
        k(  182) = (  -1.0000000  -0.6666667   0.6666667), wk =   0.0046296
        k(  183) = (  -1.1666667  -0.5000000   0.5000000), wk =   0.0046296
        k(  184) = (  -1.3333333  -0.3333333   0.3333333), wk =   0.0046296
        k(  185) = (  -1.5000000  -0.1666667   0.1666667), wk =   0.0046296
        k(  186) = (  -1.6666667   0.0000000   0.0000000), wk =   0.0046296
        k(  187) = (  -0.6666667  -0.6666667   1.0000000), wk =   0.0046296
        k(  188) = (  -0.8333333  -0.5000000   0.8333333), wk =   0.0046296
        k(  189) = (  -1.0000000  -0.3333333   0.6666667), wk =   0.0046296
        k(  190) = (  -1.1666667  -0.1666667   0.5000000), wk =   0.0046296
        k(  191) = (  -1.3333333   0.0000000   0.3333333), wk =   0.0046296
        k(  192) = (  -1.5000000   0.1666667   0.1666667), wk =   0.0046296
        k(  193) = (  -0.5000000  -0.5000000   1.1666667), wk =   0.0046296
        k(  194) = (  -0.6666667  -0.3333333   1.0000000), wk =   0.0046296
        k(  195) = (  -0.8333333  -0.1666667   0.8333333), wk =   0.0046296
        k(  196) = (  -1.0000000   0.0000000   0.6666667), wk =   0.0046296
        k(  197) = (  -1.1666667   0.1666667   0.5000000), wk =   0.0046296
        k(  198) = (  -1.3333333   0.3333333   0.3333333), wk =   0.0046296
        k(  199) = (  -0.3333333  -0.3333333   1.3333333), wk =   0.0046296
        k(  200) = (  -0.5000000  -0.1666667   1.1666667), wk =   0.0046296
        k(  201) = (  -0.6666667   0.0000000   1.0000000), wk =   0.0046296
        k(  202) = (  -0.8333333   0.1666667   0.8333333), wk =   0.0046296
        k(  203) = (  -1.0000000   0.3333333   0.6666667), wk =   0.0046296
        k(  204) = (  -1.1666667   0.5000000   0.5000000), wk =   0.0046296
        k(  205) = (  -0.1666667  -0.1666667   1.5000000), wk =   0.0046296
        k(  206) = (  -0.3333333   0.0000000   1.3333333), wk =   0.0046296
        k(  207) = (  -0.5000000   0.1666667   1.1666667), wk =   0.0046296
        k(  208) = (  -0.6666667   0.3333333   1.0000000), wk =   0.0046296
        k(  209) = (  -0.8333333   0.5000000   0.8333333), wk =   0.0046296
        k(  210) = (  -1.0000000   0.6666667   0.6666667), wk =   0.0046296
        k(  211) = (   0.0000000   0.0000000   1.6666667), wk =   0.0046296
        k(  212) = (  -0.1666667   0.1666667   1.5000000), wk =   0.0046296
        k(  213) = (  -0.3333333   0.3333333   1.3333333), wk =   0.0046296
        k(  214) = (  -0.5000000   0.5000000   1.1666667), wk =   0.0046296
        k(  215) = (  -0.6666667   0.6666667   1.0000000), wk =   0.0046296
        k(  216) = (  -0.8333333   0.8333333   0.8333333), wk =   0.0046296

     PseudoPot. # 1 for Si read from file:
     /THL8/home/jwluo/filepool/pseudos/Si_r.upf
     MD5 check sum: 538a76d466da59d525cdbd01722ac2dd
     Pseudo is Norm-conserving + core correction, Zval =  4.0
     Generated using ONCVPSP code by D. R. Hamann
     Using radial grid of 1528 points, 10 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   1
                l(4) =   1
                l(5) =   1
                l(6) =   1
                l(7) =   2
                l(8) =   2
                l(9) =   2
               l(10) =   2
     EPW          :      1.38s CPU      1.56s WALL

     EPW          :      1.51s CPU      1.69s WALL

     -------------------------------------------------------------------
     Wannierization on  6 x  6 x  6 electronic grid
     -------------------------------------------------------------------
 
     Spin CASE ( non-collinear )
 
     Initializing Wannier90
 
 
     Initial Wannier projections
 
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   1
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   1
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   2
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   2
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   3
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   3
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   4
     (   0.00000   0.00000   0.00000) :  l =  -3 mr =   4
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   1
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   1
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   2
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   2
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   3
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   3
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   4
     (  -0.25000   0.75000  -0.25000) :  l =  -3 mr =   4

      - Number of bands is ( 16)
      - Number of total bands is ( 16)
      - Number of excluded bands is (  0)
      - Number of wannier functions is ( 16)
      - All guiding functions are given 
 
  Reading data about k-point neighbours 
 
      - All neighbours are found 
 
     AMN
      k points =   216 in   72 pools
            1 of    3 on ionode
            2 of    3 on ionode
            3 of    3 on ionode
 
     AMN calculated
 
     MMN
      k points =   216 in   72 pools
            1 of    3 on ionode
            2 of    3 on ionode
            3 of    3 on ionode
     MMN calculated
 
     Running Wannier90
 
     Wannier Function centers (cartesian, alat) and spreads (ang):
 
     (   0.07300   0.01936   0.06771) :   4.48438
     (   0.04925   0.03072   0.06039) :   4.82000
     (   0.04229  -0.01375  -0.08651) :   4.76541
     (   0.05977  -0.00095  -0.08953) :   4.46345
     (  -0.06369   0.07571   0.00642) :   4.60878
     (  -0.07533   0.06224   0.00653) :   4.66684
     (  -0.04096  -0.07686   0.02603) :   4.60030
     (  -0.02768  -0.08895   0.03923) :   4.51163
     (   0.33245   0.33847   0.33462) :   3.66268
     (   0.33322   0.33465   0.33406) :   3.70451
     (   0.33816   0.16164   0.17794) :   3.63690
     (   0.33556   0.15811   0.17572) :   3.64490
     (   0.17135   0.33102   0.16009) :   3.70085
     (   0.16957   0.33077   0.16004) :   3.67201
     (   0.16335   0.17282   0.33956) :   3.69975
     (   0.16155   0.17305   0.33866) :   3.67405
 
     -------------------------------------------------------------------
     WANNIER      :     17.15s CPU     27.88s WALL (       1 calls)
     -------------------------------------------------------------------

     Calculating kgmap

     Progress kgmap: ########################################
     kmaps        :      0.03s CPU      0.34s WALL (       1 calls)
     Symmetries of Bravais lattice:  48
     Symmetries of crystal:          48


     ===================================================================
     irreducible q point #    1
     ===================================================================

     Symmetries of small group of q: 48
          in addition sym. q -> -q+G:
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000
